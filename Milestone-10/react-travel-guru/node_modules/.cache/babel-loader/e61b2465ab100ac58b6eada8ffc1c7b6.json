{"ast":null,"code":"var _s = $RefreshSig$();\n\n// non - customized\nimport { getAuth, signInWithPopup, GoogleAuthProvider, GithubAuthProvider, signOut, onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification, sendPasswordResetEmail, updateProfile } from \"firebase/auth\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport initializeAuthentication from \"../Pages/Login/Firebase/firebase.init\";\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  // we have to save the login info of the user, thats why we need to declare a state\n  const [user, setUser] = useState();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLogin, setIsLogin] = useState(false);\n  const auth = getAuth();\n\n  const signInUsingGoogle = () => {\n    setIsLoading(true);\n    const googleProvider = new GoogleAuthProvider();\n    signInWithPopup(auth, googleProvider).then(result => {\n      setUser(result.user);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  const signInUsingGithub = () => {\n    setIsLoading(true);\n    const githubProvider = new GithubAuthProvider();\n    signInWithPopup(auth, githubProvider).then(result => {\n      setUser(result.user); // console.log(result.user);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  const toggleLogin = e => {\n    setIsLogin(e.target.checked);\n  };\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleRegistration = e => {\n    e.preventDefault();\n    console.log(email, password);\n\n    if (password.length < 6) {\n      setError('Password Must be at least 6 characters long.');\n      return;\n    }\n\n    if (!/(?=.*[A-Z].*[A-Z])/.test(password)) {\n      setError('Password Must contain 2 upper case');\n      return;\n    }\n\n    if (isLogin) {\n      processLogin(email, password);\n    } else {\n      registerNewUser(email, password);\n    }\n  };\n\n  const processLogin = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).then(result => {\n      const user = result.user;\n      setUser(user);\n      setError('');\n    }).catch(error => {\n      setError(error.message);\n    });\n  };\n\n  const registerNewUser = (email, password) => {\n    createUserWithEmailAndPassword(auth, email, password).then(result => {\n      setUser(result.user);\n      console.log(result.user);\n      setError('');\n      verifyEmail();\n      setUserName();\n    }).catch(error => {\n      setError(error.message);\n    });\n  };\n\n  const setUserName = () => {\n    updateProfile(auth.currentUser, {\n      displayName: name\n    }).then(result => {});\n  };\n\n  const verifyEmail = () => {\n    sendEmailVerification(auth.currentUser).then(result => {\n      console.log(result);\n    });\n  };\n\n  const handleResetPassword = () => {\n    sendPasswordResetEmail(auth, email).then(result => {});\n  }; // observe user state change\n\n\n  useEffect(() => {\n    const unsubscribed = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n    return () => unsubscribed;\n  }, []);\n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {}).finally(() => {\n      setIsLoading(false);\n    });\n  }; // for multiple return, we need array or object\n\n\n  return {\n    user,\n    isLoading,\n    isLogin,\n    error,\n    signInUsingGoogle,\n    signInUsingGithub,\n    logOut,\n    handleRegistration,\n    handleNameChange,\n    handleEmailChange,\n    handlePasswordChange,\n    toggleLogin,\n    handleResetPassword\n  };\n};\n\n_s(useFirebase, \"y8T8eZTJFiXFVBHcnlmPzcnBSuY=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["D:/Programming/Programming Hero/Course/Milestones/Milestone-10/react-travel-guru/src/hooks/useFirebase.js"],"names":["getAuth","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","signOut","onAuthStateChanged","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendEmailVerification","sendPasswordResetEmail","updateProfile","useEffect","useState","initializeAuthentication","useFirebase","user","setUser","name","setName","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","isLogin","setIsLogin","auth","signInUsingGoogle","googleProvider","then","result","finally","signInUsingGithub","githubProvider","toggleLogin","e","target","checked","handleNameChange","value","handleEmailChange","handlePasswordChange","handleRegistration","preventDefault","console","log","length","test","processLogin","registerNewUser","catch","message","verifyEmail","setUserName","currentUser","displayName","handleResetPassword","unsubscribed","logOut"],"mappings":"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","sourcesContent":["// non - customized\r\n\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider, GithubAuthProvider, signOut, onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification, sendPasswordResetEmail, updateProfile } from \"firebase/auth\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport initializeAuthentication from \"../Pages/Login/Firebase/firebase.init\";\r\n\r\ninitializeAuthentication();\r\n\r\nconst useFirebase = () => {\r\n    // we have to save the login info of the user, thats why we need to declare a state\r\n    const [user, setUser] = useState();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const auth = getAuth();\r\n\r\n    const signInUsingGoogle = () => {\r\n        setIsLoading(true);\r\n        const googleProvider = new GoogleAuthProvider();\r\n        signInWithPopup(auth, googleProvider)\r\n            .then((result) => {\r\n                setUser(result.user);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const signInUsingGithub = () => {\r\n        setIsLoading(true);\r\n        const githubProvider = new GithubAuthProvider();\r\n        signInWithPopup(auth, githubProvider)\r\n            .then((result) => {\r\n                setUser(result.user);\r\n                // console.log(result.user);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n\r\n    }\r\n\r\n    const toggleLogin = e => {\r\n        setIsLogin(e.target.checked)\r\n    }\r\n\r\n    const handleNameChange = e => {\r\n        setName(e.target.value);\r\n    }\r\n    const handleEmailChange = e => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = e => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleRegistration = e => {\r\n        e.preventDefault();\r\n        console.log(email, password);\r\n        if (password.length < 6) {\r\n            setError('Password Must be at least 6 characters long.')\r\n            return;\r\n        }\r\n        if (!/(?=.*[A-Z].*[A-Z])/.test(password)) {\r\n            setError('Password Must contain 2 upper case');\r\n            return;\r\n        }\r\n\r\n        if (isLogin) {\r\n            processLogin(email, password);\r\n        }\r\n        else {\r\n            registerNewUser(email, password);\r\n        }\r\n\r\n    }\r\n\r\n    const processLogin = (email, password) => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(result => {\r\n                const user = result.user;\r\n                setUser(user);\r\n                setError('');\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n    }\r\n\r\n    const registerNewUser = (email, password) => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(result => {\r\n                setUser(result.user);\r\n                console.log(result.user);\r\n                setError('');\r\n                verifyEmail();\r\n                setUserName();\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            })\r\n    }\r\n\r\n    const setUserName = () => {\r\n        updateProfile(auth.currentUser, { displayName: name })\r\n            .then(result => { })\r\n    }\r\n\r\n    const verifyEmail = () => {\r\n        sendEmailVerification(auth.currentUser)\r\n            .then(result => {\r\n                console.log(result);\r\n            })\r\n    }\r\n\r\n    const handleResetPassword = () => {\r\n        sendPasswordResetEmail(auth, email)\r\n            .then(result => { })\r\n    }\r\n\r\n    // observe user state change\r\n    useEffect(() => {\r\n        const unsubscribed = onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser(user);\r\n            } else {\r\n                setUser({})\r\n            }\r\n            setIsLoading(false);\r\n        });\r\n        return () => unsubscribed;\r\n    }, [])\r\n\r\n    const logOut = () => {\r\n        setIsLoading(true);\r\n        signOut(auth)\r\n            .then(() => { })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    // for multiple return, we need array or object\r\n    return {\r\n        user,\r\n        isLoading,\r\n        isLogin,\r\n        error,\r\n        signInUsingGoogle,\r\n        signInUsingGithub,\r\n        logOut,\r\n        handleRegistration,\r\n        handleNameChange,\r\n        handleEmailChange,\r\n        handlePasswordChange,\r\n        toggleLogin,\r\n        handleResetPassword\r\n    }\r\n}\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}